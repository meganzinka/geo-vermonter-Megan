{"ast":null,"code":"var _jsxFileName = \"/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/Panel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\"; //always set to/default as -  \"?\"  - unless player selects \"I give up\", then info is revealed\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Panel(props) {\n  _s();\n\n  //start off all as ? and set locations if someone wins or gives up \n  const [lat, setLat] = useState(\"?\");\n  const [long, setLong] = useState(\"?\");\n  const [county, setCounty] = useState(\"?\");\n  const [town, setTown] = useState(\"?\"); //if player selects i give up or wins and the county is still ? then set to info\n\n  if (props.userGiveUp === true && county === \"?\" || props.win === true && county === \"?\") {\n    setCounty(props.location.county);\n    setTown(props.location.city);\n    setLat(props.droppedPin[0]);\n    setLong(props.droppedPin[1]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Latitude: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Longitude: \", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"County: \", county]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Town: \", town]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} //and reveal info in the return.\n\n_s(Panel, \"ptwJoVNKHFdfh6H8inkU7ANIHTI=\");\n\n_c = Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/Panel.js"],"names":["React","useState","Panel","props","lat","setLat","long","setLong","county","setCounty","town","setTown","userGiveUp","win","location","city","droppedPin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAGA;;;AACA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC;AACE,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,GAAD,CAA9B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,GAAD,CAAhC,CALiC,CAOjC;;AACA,MAAKE,KAAK,CAACS,UAAN,KAAqB,IAArB,IAA6BJ,MAAM,KAAK,GAAzC,IAAkDL,KAAK,CAACU,GAAN,KAAc,IAAd,IAAsBL,MAAM,KAAI,GAAtF,EAA4F;AAE5FC,IAAAA,SAAS,CAACN,KAAK,CAACW,QAAN,CAAeN,MAAhB,CAAT;AACAG,IAAAA,OAAO,CAAER,KAAK,CAACW,QAAN,CAAeC,IAAjB,CAAP;AACAV,IAAAA,MAAM,CAACF,KAAK,CAACa,UAAN,CAAiB,CAAjB,CAAD,CAAN;AACAT,IAAAA,OAAO,CAACJ,KAAK,CAACa,UAAN,CAAiB,CAAjB,CAAD,CAAP;AACC;;AAEH,sBACE;AAAA,4BACE;AAAA,+BAAeZ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gCAAgBE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAaE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,2BAAWE,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CACD;;GAzBwBR,K;;KAAAA,K","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n\n//always set to/default as -  \"?\"  - unless player selects \"I give up\", then info is revealed\nexport default function Panel(props) {\n  //start off all as ? and set locations if someone wins or gives up \n    const [lat, setLat] = useState(\"?\");\n    const [long, setLong] = useState(\"?\");\n    const [county, setCounty] = useState(\"?\");\n    const [town, setTown] = useState(\"?\");\n\n    //if player selects i give up or wins and the county is still ? then set to info\n    if ((props.userGiveUp === true && county === \"?\") || (props.win === true && county ===\"?\")) {\n    \n    setCounty(props.location.county)\n    setTown (props.location.city)\n    setLat(props.droppedPin[0])\n    setLong(props.droppedPin[1])\n    } \n\n  return (\n    <div>\n      <h3>Latitude: {lat}</h3>\n      <h3>Longitude: {long}</h3>\n      <h3>County: {county}</h3>\n      <h3>Town: {town}</h3>\n    </div>\n  );\n}\n//and reveal info in the return."]},"metadata":{},"sourceType":"module"}