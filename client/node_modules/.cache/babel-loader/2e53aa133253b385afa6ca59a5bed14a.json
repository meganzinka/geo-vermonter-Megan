{"ast":null,"code":"var _jsxFileName = \"/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/DisplayButtons.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayButtons(props) {\n  //when user gives up\n  function giveUp(event) {\n    //set to true so that the lat, long, location data shows up\n    props.setUserGiveUp(true); //end game\n\n    props.setStart(false); //give option to play new game\n\n    props.setNewGame(true);\n  }\n\n  function goBack(event) {\n    //bring back to initial pin\n    props.setReturnToStart(true);\n  }\n\n  if (props.start) {\n    //buttons for guess, quit, i give up\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display-buttons-container\",\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"guess\",\n          onClick: () => {\n            props.setGuess(true);\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"return-to-start\",\n          onClick: goBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"give-up\",\n          onClick: giveUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else if (props.newGame) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-game-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"new-game-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else return null;\n} //guess and quit are started by onclicks -> set to true.\n//Guess component is child of display buttons to pass thru info of click events\n\n_c = DisplayButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayButtons\");","map":{"version":3,"sources":["/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/DisplayButtons.js"],"names":["React","DisplayButtons","props","giveUp","event","setUserGiveUp","setStart","setNewGame","goBack","setReturnToStart","start","setGuess","newGame","window","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C;AACA,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoB,IAApB,EAFqB,CAGrB;;AACAH,IAAAA,KAAK,CAACI,QAAN,CAAe,KAAf,EAJqB,CAKrB;;AACAJ,IAAAA,KAAK,CAACK,UAAN,CAAiB,IAAjB;AACD;;AAED,WAASC,MAAT,CAAgBJ,KAAhB,EAAuB;AACrB;AACAF,IAAAA,KAAK,CAACO,gBAAN,CAAuB,IAAvB;AACD;;AAED,MAAIP,KAAK,CAACQ,KAAV,EAAiB;AACf;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,2BAAR;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,OAAO,EAAE,MAAM;AACbR,YAAAA,KAAK,CAACS,QAAN,CAAe,IAAf;AACD,WAJH;AAAA,oBAMG;AANH;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAWI;AAAQ,UAAA,EAAE,EAAC,iBAAX;AAA6B,UAAA,OAAO,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAQ,UAAA,EAAE,EAAC,SAAX;AAAqB,UAAA,OAAO,EAAEL;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GAtBD,MAsBO,IAAID,KAAK,CAACU,OAAV,EAAmB;AACxB,wBACE;AAAK,MAAA,EAAE,EAAE,oBAAT;AAAA,6BACA;AAAK,QAAA,EAAE,EAAG,iBAAV;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARM,MAQA,OAAO,IAAP;AACR,C,CACD;AACA;;KAjDwBd,c","sourcesContent":["import React from \"react\";\n\nexport default function DisplayButtons(props) {\n  //when user gives up\n  function giveUp(event) {\n    //set to true so that the lat, long, location data shows up\n    props.setUserGiveUp(true);\n    //end game\n    props.setStart(false);\n    //give option to play new game\n    props.setNewGame(true);\n  }\n\n  function goBack(event) {\n    //bring back to initial pin\n    props.setReturnToStart(true);\n  }\n\n  if (props.start) {\n    //buttons for guess, quit, i give up\n    return (\n      <div id=\"display-buttons-container\">\n        <center>\n          <button\n            id=\"guess\"\n            onClick={() => {\n              props.setGuess(true);\n            }}\n          >\n            {\" \"}\n          </button>\n          <br></br>\n          {/* <div id=\"return-container\"> */}\n            <button id=\"return-to-start\" onClick={goBack}></button>\n          {/* </div> */}\n          <br></br>\n          <button id=\"give-up\" onClick={giveUp}></button>\n        </center>\n      </div>\n    );\n  } else if (props.newGame) {\n    return (\n      <div id =\"new-game-container\">\n      <div id = \"new-game-button\">\n        <button onClick={() => window.location.reload()}>New Game</button>\n      </div>\n      </div>\n    );\n  } else return null;\n}\n//guess and quit are started by onclicks -> set to true.\n//Guess component is child of display buttons to pass thru info of click events\n"]},"metadata":{},"sourceType":"module"}