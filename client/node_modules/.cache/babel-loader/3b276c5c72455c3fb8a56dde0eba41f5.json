{"ast":null,"code":"var _jsxFileName = \"/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/Guess.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Message from \"./Message\"; //this is guess function, seeing that selected county from dropdown menu is same as pinpointed county\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Guess(props) {\n  _s();\n\n  const [displayMessage, setDisplayMessage] = useState(false);\n  const [countyGuess, setCountyGuess] = useState(false); //check to see if if user's guess is correct \n\n  function submitGuess(event) {\n    if (countyGuess === props.location.county) {\n      //user won the game - send this info to App so can show lat/long etc \n      props.setWin(true); //make setGuess false so that the popup will go away \n\n      props.setGuess(false); //set the message in the popup to be the winning message \n\n      setDisplayMessage(\"win\"); //winning has similar function to giving up - show the location data \n\n      props.setUserGiveUp(true); //make certain buttons disappear \n\n      props.setStart(false); //give option to start new game \n\n      props.setNewGame(true);\n    } else if (countyGuess !== props.location.county) {\n      //user lost the game - don't want to show lat/long/etc\n      props.setWin(false); //make the guessing pop-up disappear \n\n      props.setGuess(false); //set the message in popup to be the losing message \n\n      setDisplayMessage(\"lose\"); //subtract 10 pints \n\n      props.setScore(props.score - 10);\n    }\n  } //changes the chosen county to the one that user chose \n\n\n  function chooseCounty(event) {\n    setCountyGuess(event.target.value);\n  }\n\n  function closeModal(event) {\n    setDisplayMessage(false);\n    props.setGuess(false);\n  } //options of counties. default is to make sure that first choice (addison) is actually selected/clicked to translate that information\n\n\n  if (props.guess === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"guess-county-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"guess-county\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"county\",\n          onChange: chooseCounty,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Please pick a county : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Addison County\",\n            children: \"Addison County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bennington County\",\n            children: \"Bennington County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Caledonia County\",\n            children: \"Caledonia County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Chittenden County\",\n            children: \"Chittenden County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Essex County\",\n            children: \"Essex County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Franklin County\",\n            children: \"Franklin County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Grand-Isle County\",\n            children: \"Grand Isle County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lamoille County\",\n            children: \" Lamoille County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Orange County\",\n            children: \" Orange County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Orleans County\",\n            children: \" Orleans County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rutland County\",\n            children: \"Rutland County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sullivan County\",\n            children: \"Sullivan County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Washington County\",\n            children: \"Washington County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Windham County\",\n            children: \" Windham County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Windsor County\",\n            children: \" Windsor County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"guess-button\",\n              onClick: submitGuess,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"guess-button\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this); // show winning or losing message depending on submitGuess function\n  } else if (!props.guess && displayMessage) {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      score: props.score,\n      displayMessage: displayMessage,\n      setdisplayMessage: setDisplayMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  } else return null;\n}\n\n_s(Guess, \"5DJ+Ij7zjC8QwEQpFUZaHfiaugk=\");\n\n_c = Guess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"sources":["/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/Guess.js"],"names":["React","useState","Message","Guess","props","displayMessage","setDisplayMessage","countyGuess","setCountyGuess","submitGuess","event","location","county","setWin","setGuess","setUserGiveUp","setStart","setNewGame","setScore","score","chooseCounty","target","value","closeModal","guess"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Message from \"./Message\"\n\n//this is guess function, seeing that selected county from dropdown menu is same as pinpointed county\nexport default function Guess(props) {\n  const [displayMessage, setDisplayMessage] = useState(false);\n  const [countyGuess, setCountyGuess] = useState(false);\n\n//check to see if if user's guess is correct \n  function submitGuess(event) {\n    if (countyGuess === props.location.county) {\n      //user won the game - send this info to App so can show lat/long etc \n      props.setWin(true)\n      //make setGuess false so that the popup will go away \n      props.setGuess(false);\n      //set the message in the popup to be the winning message \n      setDisplayMessage(\"win\")\n      //winning has similar function to giving up - show the location data \n      props.setUserGiveUp(true)\n      //make certain buttons disappear \n      props.setStart(false)\n      //give option to start new game \n      props.setNewGame(true)\n    } else if (countyGuess !== props.location.county) {\n      //user lost the game - don't want to show lat/long/etc\n      props.setWin(false)\n      //make the guessing pop-up disappear \n      props.setGuess(false);\n      //set the message in popup to be the losing message \n      setDisplayMessage(\"lose\")\n      //subtract 10 pints \n      props.setScore(props.score - 10)\n    }\n  }\n\n  //changes the chosen county to the one that user chose \n  function chooseCounty (event) {\n    setCountyGuess(event.target.value)\n  }\n\n  function closeModal (event) {\n    setDisplayMessage(false)\n    props.setGuess(false)\n  }\n\n  //options of counties. default is to make sure that first choice (addison) is actually selected/clicked to translate that information\n  if (props.guess === true) {\n    return (\n      <div id=\"guess-county-wrapper\">\n        <div id=\"guess-county\">\n            <select name=\"county\" onChange = {chooseCounty}>\n              <option value=\"default\" >Please pick a county : </option>\n              <option value=\"Addison County\">Addison County</option>\n              <option value=\"Bennington County\">Bennington County</option>\n              <option value=\"Caledonia County\">Caledonia County</option>\n              <option value=\"Chittenden County\">Chittenden County</option>\n              <option value=\"Essex County\">Essex County</option>\n              <option value=\"Franklin County\">Franklin County</option>\n              <option value=\"Grand-Isle County\">Grand Isle County</option>\n              <option value=\"Lamoille County\"> Lamoille County</option>\n              <option value=\"Orange County\"> Orange County</option>\n              <option value=\"Orleans County\"> Orleans County</option>\n              <option value=\"Rutland County\">Rutland County</option>\n              <option value=\"Sullivan County\">Sullivan County</option>\n              <option value=\"Washington County\">Washington County</option>\n              <option value=\"Windham County\"> Windham County</option>\n              <option value=\"Windsor County\"> Windsor County</option>\n            </select>\n            <span><center>\n            <button class = \"guess-button\" onClick = {submitGuess}>\n              Submit\n            </button>\n          {/* Make the message go away when user hits cancel  */}\n          <button class = \"guess-button\" onClick={closeModal}>Cancel</button>\n          </center></span></div>\n      </div>\n    );\n      // show winning or losing message depending on submitGuess function\n  } else if (!props.guess && displayMessage) {\n    return (<Message score = {props.score} displayMessage = {displayMessage} setdisplayMessage = {setDisplayMessage} />);\n  } else return null \n  }\n"]},"metadata":{},"sourceType":"module"}