{"ast":null,"code":"var _jsxFileName = \"/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/GeoData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\"; //GeoData is sourcing specific location details from nominatim.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GeoData(props) {\n  _s();\n\n  //new x and new y are our new generated random location\n  //we then fetch the info and set it to setLocation. we assign the county.\n  //city is either the town, city, or village. all one variable \"city\"\n  useEffect(() => {\n    if (props.location.county === \"\" && props.start === true) {\n      let newX = props.droppedPin[0];\n      let newY = props.droppedPin[1];\n      fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${newX}&lon=${newY}`).then(res => res.json()).then(jsonObj => {\n        if (jsonObj.address.town) {\n          props.setLocation({\n            county: jsonObj.address.county,\n            city: jsonObj.address.town\n          });\n        } else if (jsonObj.address.city) {\n          props.setLocation({\n            county: jsonObj.address.county,\n            city: jsonObj.address.city\n          });\n        } else if (jsonObj.address.village) {\n          props.setLocation({\n            county: jsonObj.address.county,\n            city: jsonObj.address.village\n          });\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n\n_s(GeoData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GeoData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoData\");","map":{"version":3,"sources":["/Users/megsimac/code/projects/geo-vermonter-Megan/src/components/GeoData.js"],"names":["React","useEffect","GeoData","props","location","county","start","newX","droppedPin","newY","fetch","then","res","json","jsonObj","address","town","setLocation","city","village"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,OAAzB,C,CAGA;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAErC;AACA;AACA;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,EAA1B,IAAgCF,KAAK,CAACG,KAAN,KAAgB,IAApD,EAA0D;AACxD,UAAIC,IAAI,GAAGJ,KAAK,CAACK,UAAN,CAAiB,CAAjB,CAAX;AACA,UAAIC,IAAI,GAAGN,KAAK,CAACK,UAAN,CAAiB,CAAjB,CAAX;AACAE,MAAAA,KAAK,CACF,iEAAgEH,IAAK,QAAOE,IAAK,EAD/E,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,OAAD,IAAa;AACjB,YAAIA,OAAO,CAACC,OAAR,CAAgBC,IAApB,EAA0B;AACzBb,UAAAA,KAAK,CAACc,WAAN,CAAkB;AACfZ,YAAAA,MAAM,EAAES,OAAO,CAACC,OAAR,CAAgBV,MADT;AAEfa,YAAAA,IAAI,EAAEJ,OAAO,CAACC,OAAR,CAAgBC;AAFP,WAAlB;AAIA,SALD,MAKO,IAAIF,OAAO,CAACC,OAAR,CAAgBG,IAApB,EAA0B;AAC/Bf,UAAAA,KAAK,CAACc,WAAN,CAAkB;AAChBZ,YAAAA,MAAM,EAAES,OAAO,CAACC,OAAR,CAAgBV,MADR;AAEhBa,YAAAA,IAAI,EAAEJ,OAAO,CAACC,OAAR,CAAgBG;AAFN,WAAlB;AAID,SALM,MAKA,IAAIJ,OAAO,CAACC,OAAR,CAAgBI,OAApB,EAA6B;AAClChB,UAAAA,KAAK,CAACc,WAAN,CAAkB;AAChBZ,YAAAA,MAAM,EAAES,OAAO,CAACC,OAAR,CAAgBV,MADR;AAEhBa,YAAAA,IAAI,EAAEJ,OAAO,CAACC,OAAR,CAAgBI;AAFN,WAAlB;AAID;AACF,OArBH;AAsBD;AACF,GA3BQ,CAAT;AA4BE,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAlCuBjB,O;;KAAAA,O","sourcesContent":["import React from \"react\";\nimport { useEffect} from \"react\";\n\n\n//GeoData is sourcing specific location details from nominatim.\nexport default function GeoData(props) {\n\n  //new x and new y are our new generated random location\n  //we then fetch the info and set it to setLocation. we assign the county.\n  //city is either the town, city, or village. all one variable \"city\"\n  useEffect(() => {\n    if (props.location.county === \"\" && props.start === true) {\n      let newX = props.droppedPin[0];\n      let newY = props.droppedPin[1];\n      fetch(\n        `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${newX}&lon=${newY}`\n      )\n        .then((res) => res.json())\n        .then((jsonObj) => {\n          if (jsonObj.address.town) {\n           props.setLocation({\n              county: jsonObj.address.county,\n              city: jsonObj.address.town,\n            })\n          } else if (jsonObj.address.city) {\n            props.setLocation({\n              county: jsonObj.address.county,\n              city: jsonObj.address.city,\n            });\n          } else if (jsonObj.address.village) {\n            props.setLocation({\n              county: jsonObj.address.county,\n              city: jsonObj.address.village,\n            });\n          }\n        });\n    }\n  });\n    return <div></div>;\n}\n"]},"metadata":{},"sourceType":"module"}